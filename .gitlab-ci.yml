# Dependencies are managed in the Dockerfile in the inkscape-ci-docker
# Git repository. Change them there, wait a bit, and then we'll use
# the new ones here in these builds.
image: registry.gitlab.com/inkscape/inkscape-ci-docker/master


# This file is structured in four parts:
# I) definitions
# II) build jobs
# III) checks that are run on merge requests
# IV) building inkscape.gitlab.io/inkscape (doc and scan)
#


#######################
#                     #
#     Definitions     #
#                     #
#######################

# all jobs are safe to interrupt
default:
  interruptible: true
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
  timeout: 3h


#speedup git on runners
variables:
  GIT_DEPTH: "10"
  GIT_SUBMODULE_STRATEGY: recursive

#reusable templates
.ccache_init: &ccache_init
  before_script:
    - mkdir -p ccache
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=${PWD}/ccache

.cmake: &cmake
- mkdir -p build/conf
- cd build
- cmake .. -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX:PATH=$PWD/install_dir/ -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

# basic workflow setup:
# - run pipelines for all branches without an open MR
# - run MR pipeline only as soon as an MR is opened
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

.run_MR: &run_for_MR
  if: '$CI_MERGE_REQUEST_ID'

.run_no_MR: &do_not_run_for_MR
  if: '$CI_MERGE_REQUEST_ID'
  when: never

.run_no_schedules: &do_not_run_for_schedules
  if: '$CI_PIPELINE_SOURCE == "schedule"'
  when: never

.run_otherwise: &run_otherwise
  when: on_success


#######################
#                     #
#  Building inkscape  #
#                     #
#######################
# Linux, Appimage, macOS, Windows.


inkscape:windows:x64: &windows_job
  stage: build
  tags:
    - shared-windows
  rules:
    - *do_not_run_for_schedules
    # Windows runner is restricted to "inkscape" and "ede123" namespaces; only generate pipelines for those
    - if: '$CI_PROJECT_NAMESPACE == "inkscape"'
    - if: '$CI_PROJECT_NAMESPACE == "ede123"'
  cache:
    key: "cache-windows"
    paths:
      - build/ccache
  variables:
    PACMAN_OPTIONS: "--needed --noconfirm"
    MSYSTEM: MINGW64
    CCACHE_DIR: $CI_PROJECT_DIR/build/ccache
    CCACHE_MAXSIZE: "2.0G"
    WINDEPS_RELEASE_ARCHIVE: msys64.7z
    WINDEPS_RELEASE_TAG: r230611.1
    WINDEPS_RELEASE_URL: https://gitlab.com/api/v4/projects/46763286/packages/generic/windeps/$WINDEPS_RELEASE_TAG/$WINDEPS_RELEASE_ARCHIVE
  script:
    - wget.exe --quiet --no-check-certificate $WINDEPS_RELEASE_URL
    - 7z x -oC:/ $WINDEPS_RELEASE_ARCHIVE
    - C:/msys64/msys2_shell.cmd -defterm -no-start -mingw64 -here -c "cmake -Bbuild -G Ninja -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DWITH_INTERNAL_CAIRO=OFF"
    - C:/msys64/msys2_shell.cmd -defterm -no-start -mingw64 -here -c "timeout -k 20s 10m ninja -C build; echo "rc=$?"; exit 0"
